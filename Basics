laravel installation
..........................
	composer create-project laravel/laravel project_name --prefer-dist
	change env.example to .env
	cd project_name
	php artisan serve
	php artisan key:generate

create table
.........................
	php artisan make:migration create_users_table
	php artisan migrate

create controller & model
..........................
	php artisan make:controller userController 
	php artisan make:model User
  
 env file
.........................
	DB_CONNECTION=mysql
	DB_HOST=127.0.0.1
	DB_PORT=3306
	DB_DATABASE=employeeApp
	DB_USERNAME=root
	DB_PASSWORD=root123
	
Laravel eloquent
............................
Retrieving Results
  1. Retrieving All Rows From A Table
     $data = Employee::all();
     
  2. Retrieve the first model matching the query constraints...
     $data = Employee::first();
     
     first() returns the first record found in the database. If no matching model exist, it returns null.
     firstOrFail() returns the first record found in the database. If no matching model exist, it throws an error1.
     
  3. Retrieve a model by its primary key...
     $data = Employee::find(1); 
     $data = Employee::find([1, 2, 3]);     // here 1,2,3 are the primary keys
     
     find($id) takes an id and returns a single model. If no matching model exist, it returns null.
     findOrFail($id) takes an id and returns a single model. If no matching model exist, it throws an error1.
     
  4. Retrieving Aggregates
     To get total rows in a Employee table
     $count = Employee::count();
    
     to get max age of a Employee table
     $max = Employee::max('age');
     
  5. Retrieving based on codition 
  
     where  
     $data = Employee::where('id',1)->get();
     $data = Employee::where('id','=',1)->get();
     
     And Statements
     $data = Employee::where('age',24)->Where('name', 'John')->get();
     
     orWhere
     $data = Employee::where('age',24)->orWhere('name', 'John')->get();
     
     whereBetween 
     $data = Employee::whereBetween('age', [20, 30])->get();
     
     whereNotBetween 
     $data = Employee::whereNotBetween('age', [20, 30])->get();
     
     whereIn
     $data = Employee::whereIn('id', [1, 2, 3])->get();
     
     whereNotIn
     $data = Employee::whereNotIn('id', [1, 2, 3])->get();
     
     whereNull
     The whereNull method verifies that the value of the given column is NULL:
     $data = Employee::whereNull('updated_at')->get();
     
     whereNotNull
     The whereNotNull method verifies that the column's value is not NULL:
     $data = Employee::whereNotNull('updated_at')->get();
    
     orderBy
     $data = Employee::orderBy('name', 'desc')->get();
     
     LIKE function  
     $data = Employee::where('name', 'like', 'T%')->get();   
     
  6. Specifying A Select Clause
     $data=Employee::select('name', 'email as user_email')->get();
     
 Inserting & updating Models
 
        $form_data = array(
            'name'=>$request['name'], 
            'email'=>$request['email'],
            'status' =>1,
        );
        $create = Employee::create($form_data);	
	$update =  Employee::where('id', $request->employee_id)->update( $form_data);
	
      
 Deleting results 
  1. To delete a model
     $data = Employee::find(1);
     $data->delete();
   
  2. if you know the primary key of the model, you may delete the model without retrieving it by calling the destroy method.
     Employee::destroy(1);
     Employee::destroy(1, 2, 3);
     
     
 Eloquent: Relationships
 --------------------------------
     

     
     
